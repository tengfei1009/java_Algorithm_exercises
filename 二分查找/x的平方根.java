package 二分查找;

public class x的平方根 {
    public int mySqrt(int x) {
        int l = 0;
        int r = x;

        //因为根号是在一个范围内的,所以当左右边界相等时,这个数就是最接近根号的数
        //时间复杂度,因为每次都/2 判断/多少次2就可以得到之这个数也就是  2 ? = x     ? = log2(x)
        //时间复杂度也就是 log(x)
        while (l < r) {
//            取中间值,采用向上取整,因为获取到的中间值,是小于x的所以+1也不会影响结果,+1也可以避免 2,3 区间时, 5/2 = 2 一直死循环
            //因为获取(2,3)区间时 2此时满足条件 mid *mid =x 也就是根号值,此时循环不能结束, (2+3)+1 = 5 +1 = 6
            //    6/2 = 3;大于x 取 r = 3-1 = 2   l = r 不满足循环条件退出循环

            // 小  大   得到 大 mid = 大-1 =小   大= 小 结束循环
            int mid = l + (r - l) / 2+1;
            if ((long)mid * mid <= x) l = mid;
            else r=mid -1;
        }
        return l;
    }
}
